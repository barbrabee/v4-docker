name: buildx

on:
  workflow_dispatch:

env:
  GHCR_SLUG: ghcr.io/chevereto/docker

jobs:
  buildx:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.GHCR_SLUG }}
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=pr
            type=edge
          labels: |
            org.opencontainers.image.title=Chevereto
            org.opencontainers.image.description=Chevereto bootstrapped
            org.opencontainers.image.vendor=Chevereto

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Available platforms
        run: echo ${{ steps.qemu.outputs.platforms }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build artifacts
        uses: docker/bake-action@v1
        with:
          targets: artifact-all

      - name: Move artifacts
        run: |
          mv ./dist/**/* ./dist/

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: diun
          path: ./dist/*
          if-no-files-found: error

      - name: Build
        uses: docker/bake-action@v1
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: image-all
          push: true

      - name: GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            dist/*.tar.gz
            dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check manifest
        run: |
          docker buildx imagetools inspect ${{ env.GHCR_SLUG }}:${{ steps.meta.outputs.version }}

      - name: Inspect image
        run: |
          docker pull ${{ env.GHCR_SLUG }}:${{ steps.meta.outputs.version }}
          docker image inspect ${{ env.GHCR_SLUG }}:${{ steps.meta.outputs.version }}
